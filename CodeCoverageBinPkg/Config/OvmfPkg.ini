## @file
#
# INTEL CONFIDENTIAL
#
# Copyright (c) 2012-2013 Intel Corporation. All rights reserved.
# The source code contained or described herein and all documents related 
# to the source code ("Material") are owned by Intel Corporation or its 
# suppliers or licensors. Title to the Material remains with Intel 
# Corporation or its suppliers and licensors. 
# The Material may contain trade secrets and proprietary and confidential 
# information of Intel Corporation and its suppliers and licensors, and is 
# protected by worldwide copyright and trade secret laws and treaty 
# provisions. No part of the Material may be used, copied, reproduced, 
# modified, published, uploaded, posted, transmitted, distributed, or 
# disclosed in any way without Intel's prior express written permission. 
#
# No license under any patent, copyright, trade secret or other intellectual 
# property right is granted to or conferred upon you by disclosure or 
# delivery of the Materials, either expressly, by implication, inducement, 
# estoppel or otherwise. Any license under such intellectual property rights 
# must be express and approved by Intel in writing.
#
# Include any supplier copyright notices as supplier requires Intel to use.
#
# Include supplier trademarks or logos as supplier requires Intel to use, 
# preceded by an asterisk. An asterisked footnote can be added as follows: 
# *Third Party trademarks are the property of their respective owners.
#
# Unless otherwise agreed by Intel in writing, you may not remove or alter 
# this notice or any other notice embedded in Materials by Intel or Intel's 
# suppliers or licensors in any way.
# 
##

#
# This Package provides all definitions(including functions, MACROs, structures and library classes)
# and libraries instances, which are related to code coverage.
#
# Code Coverage Config file for Open Virtual Machine Firmware (OVMF) platform
#
################################################################################
#
# Defines Section - statements that will be processed to linked a code coverage lib.
#
# Notes:
# 1. COV_NAME is the name of this configuration file. 
# 2. COV_GUID is the GUID of this configuration file. 
# 3. COV_VERSION is the version of this configuration file. 
# 4. COVCCFG is the source level code coverage file generated from the [source] 
#    section of this code coverage configuration file automatically.
# 5. UCDAFILE is the code coverage raw data generated in the build phase.
# 6. UCNOFILE is a code coverage flag data generated in the build phase. 
#    It works together with UCDAFILE to generate the report.
# 7. The runtime libraries specified here will be linked to the specified modules
#    by its module INF type and architecture. For example, the IA32 DXE driver will
#    be linked to the libraries of EDK2_DXE_COVLIB_IA32.
#    MACRO Format: <EDK1|EDK2>_<SEC|PEI|DXE|SMM|RUNTIME|UserOwnDefinedType>_<COVLIB>_<Ia32|X64>
#		a. EDK1_* for the modules of old style, but the EDK2_* for the module of EDK2.
#		a. *_SEC_* for SEC module INF.
#		b. *_PEI_* for PEIM and PEI_CORE module INF.
#		c. *_DXE_* for 'DXE_CORE', 'DXE_DRIVER', 'DXE_SAL_DRIVER','UEFI_DRIVER',
#          'UEFI_APPLICATION' module INF.
#		d. *_SMM_* for DXE_SMM_DRIVER module INF.
#		e. *_RUNTIME_* for DXE_RUNTIME_DRIVER module INF.
#		f. Besides, it support the user own-defined type, for example, the *_USER_DEFINE_* 
#          is for the other type of 'USER_DEFINE'. The *_BASE_* is for the type of 'BASE'.
# 8. If linked to more than one library, use ';' between this libraries.
# 9. Support to use the environment variable by the $().
################################################################################
[Defines]
  COV_NAME                        = OvmfPkgIa32X64
  COV_GUID                        = EB216561-961F-47EE-9EF9-CA426EF547C4
  COV_VERSION                     = 0.4
  COVC                            = ucovc
  
  COVCCFG                         = CodeCoverageBinPkg\Config\covc.cfg
  UCDAFILE                        = CodeCoverageBinPkg\Config\Edk2Cov.ucda
  UCNOFILE                        = CodeCoverageBinPkg\Config\Edk2Cov.ucno

  EDK2_SEC_COVLIB_IA32            = 
  EDK2_SEC_COVLIB_X64             = 
  EDK2_PEI_COVLIB_IA32            = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\PeiCodeCoverageLib\Ia32\PeiCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\Ia32\libcov-edk2.lib
  EDK2_PEI_COVLIB_X64             = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\PeiCodeCoverageLib\X64\PeiCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\X64\libcov-edk2.lib
  EDK2_DXE_COVLIB_IA32            = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\Ia32\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\Ia32\libcov-edk2.lib
  EDK2_DXE_COVLIB_X64             = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\X64\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\X64\libcov-edk2.lib
  EDK2_SMM_COVLIB_IA32            = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\Ia32\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\Ia32\libcov-edk2.lib
  EDK2_SMM_COVLIB_X64             = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\X64\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\X64\libcov-edk2.lib
  EDK2_RUNTIME_COVLIB_IA32        = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\Ia32\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\Ia32\libcov-edk2.lib
  EDK2_RUNTIME_COVLIB_X64         = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\X64\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\X64\libcov-edk2.lib
  
  EDK2_USER_DEFINED_COVLIB_IA32 = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\Ia32\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\Ia32\libcov-edk2.lib
  EDK2_USER_DEFINED_COVLIB_X64  = $(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\DxeCodeCoverageLib\X64\DxeCodeCoverageLib.lib;$(WORKSPACE)\CodeCoverageBinPkg\Library\$(ITSCOVTOOLCHAIN)\CodeCoverageRuntimeLib\X64\libcov-edk2.lib
  
  #The Macro EDK1_AUTOGEN_H_INCLUDE_MAP_* defines the AutoGen.h for EDK1 modules. The default setting is Tiano.h and Status, as below.
  # $(WORKSPACE)\Build\PackageName\DEBUG_VS2008x86\Arch\ModuleName\DEBUG\AutoGen.h
  # #include "Tiano.h" //Tiano.h
  #  EFI_STATUS        //EFI_STATUS
  #  EFIAPI
  #  ${Function} (
  #    IN EFI_HANDLE        ImageHandle,
  #    IN EFI_SYSTEM_TABLE  *SystemTable
  #  );
  #Example:
  #EDK1_AUTOGEN_H_INCLUDE_MAP_1      = Efi.h|EFI_STATUS|ClientCommonPkg\LegacyUsb\usb\Uhcd.inf;ClientCommonPkg\LegacyUsb\usb\rt\UsbRt.inf
  #EDK1_AUTOGEN_H_INCLUDE_MAP_2      = Tiano.h|VOID|R8HswClientPkg\Platform\AMT\AmtSetup\AmtSetup.inf

################################################################################
#
# Components Section - List the modules which are traced or not. 
#
# Notes:
# 1. The modules starting with '!' means not to traced for code coverage, while 
#   the modules not starting with '!' means to be traced. 
#   The details are below.
#	a. Only define the traced module.
#	 All traced modules will be traced. Other modules will not be traced.
#		Example:
#		    MdeModulePkg/Core/Dxe/DxeMain.inf
#		    MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
#		    Nt32Pkg/MetronomeDxe/MetronomeDxe.inf
#		Result: Only these three modules will be traced, and other modules will 
#               not be traced.
#	b. Only define no-traced modules.
#		 All no-traced modules will not be traced. Other modules will be traced.
#		Example:
#		    !MdeModulePkg/Core/Pei/PeiMain.inf
#		    !MdeModulePkg/Universal/PCD/Pei/Pcd.inf
#		    !MdeModulePkg/Universal/ReportStatusCodeRouter/Pei/ReportStatusCodeRouterPei.inf
#		Result: Only these three modules will not be traced, and other modules will
#               be traced.
#    c. Define both the traced modules and no-traced modules.
#		a) Only all traced modules will be traced. All no-traced modules and other 
#          modules that are not covered in all directives will not be traced.
#			Example:
#			MdeModulePkg/Core/Dxe/DxeMain.inf
#			MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
#			!MdeModulePkg/Core/Pei/PeiMain.inf
#			!MdeModulePkg/Universal/PCD/Pei/Pcd.inf
#			Result: Only DxeMain.inf and Pcd.inf will be traced.
#		b)  If a module is covered by a traced module and a no-traced module. Then the 
#           module is not traced.
#		    MdeModulePkg/Core/Dxe/DxeMain.inf
#		    !MdeModulePkg/Core/Dxe/DxeMain.inf
#		    MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
#       Result: DxeMain.inf will not be traced.
# 2. Just list the Module INF, but not Library in section
# 3. If the module was enabled, its library will be enabled too.
# 4. Use the relative path of $(WORKSPACE) here.
# 5. Support to use the environment variable by the $().
#
################################################################################
[Components]
  !MdeModulePkg/Core/DxeIplPeim/DxeIpl.inf
  #
  # DXE Phase modules
  #
  MdeModulePkg/Core/Dxe/DxeMain.inf
  IntelFrameworkModulePkg/Universal/StatusCode/RuntimeDxe/StatusCodeRuntimeDxe.inf
  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
  MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
  MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf
  MdeModulePkg/Universal/EbcDxe/EbcDxe.inf
  PcAtChipsetPkg/8259InterruptControllerDxe/8259.inf
  UefiCpuPkg/CpuIo2Dxe/CpuIo2Dxe.inf
  UefiCpuPkg/CpuDxe/CpuDxe.inf
  PcAtChipsetPkg/8254TimerDxe/8254Timer.inf
  PcAtChipsetPkg/PciHostBridgeDxe/PciHostBridgeDxe.inf
  MdeModulePkg/Bus/Pci/PciBusDxe/PciBusDxe.inf
  PcAtChipsetPkg/KbcResetDxe/Reset.inf
  MdeModulePkg/Universal/Metronome/Metronome.inf
  PcAtChipsetPkg/PcatRealTimeClockRuntimeDxe/PcatRealTimeClockRuntimeDxe.inf
  IntelFrameworkModulePkg/Universal/BdsDxe/BdsDxe.inf
  OvmfPkg/BlockMmioToBlockIoDxe/BlockIo.inf
  OvmfPkg/EmuVariableFvbRuntimeDxe/Fvb.inf
  MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteDxe.inf
  MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
  MdeModulePkg/Universal/WatchdogTimerDxe/WatchdogTimer.inf
  MdeModulePkg/Universal/MonotonicCounterRuntimeDxe/MonotonicCounterRuntimeDxe.inf
  MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf
  MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
  MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
  MdeModulePkg/Universal/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
  MdeModulePkg/Universal/Console/TerminalDxe/TerminalDxe.inf
  MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf
  MdeModulePkg/Universal/PrintDxe/PrintDxe.inf
  MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf
  MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf
  MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf
################################################################################
#
# Source Section - List the source or directory which are traced or not. 
#
# Notes:
# 1. The line starting with '!'  means not to traced for code coverage, while 
#    the line not starting with '!' means to be traced. The detail rule is same
#    with the [Components] section. 
# 2. This section has higher priority than the  [Components] section. 
# 3. Use the relative path of $(WORKSPACE).
# 4. Support both the source file and directory path.
# 5. Support the MACRO $() to refer the environment variable.
#
################################################################################
[Source]
 #Exclude the build directory
 !Build
 
 #Exclude all assemble sources automatically

 #Disable to trace the PEI entry, as the PPI was not ready at that time.
 !MdePkg\Library\PeimEntryPoint
 !MdePkg\Library\PeiServicesTablePointerLib

 #Exclude the source code that want to be traced such as OpensslLib
 !CryptoPkg\Library\OpensslLib